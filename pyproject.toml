[project]
name = "process-template"
version = "0.0.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "automation-server-client @ git+https://github.com/odense-rpa/automation-server-client.git",
    "mbu-dev-shared-components>=3.0.0",
    "mbu-rpa-core",
    "pillow",
]

[tool.uv.sources]
automation-server-client = { git = "https://github.com/odense-rpa/automation-server-client.git", tag = "v0.2.0" }

[tool.setuptools]
py-modules = []

[tool.ruff]
# Match your flake8 ignores
ignore = ["E501", "E251"]

# Use Python 3.13 syntax/features
target-version = "py313"

# What to lint. Ruff covers flake8 + many pylint rules.
select = [
  "F",    # Pyflakes
  "E",    # pycodestyle errors
  "W",    # pycodestyle warnings
  "I",    # isort (import sorting)
  "UP",   # pyupgrade
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "DTZ",  # enforce timezone-aware datetimes
  "SIM",  # flake8-simplify
  "PL",   # pylint (subset)
]

# Exclusions similar to flake8 defaults; tweak as needed.
exclude = [
  ".git",
  ".venv",
  "venv",
  "__pycache__",
  "build",
  "dist",
  "uv.lock",
]

[tool.ruff.lint.isort]
# Keep imports tidy and deterministic
known-first-party = ["your_package_name"]  # <- replace with your top-level package

# Optional: if you want Ruff to auto-fix on dev machines:
# ruff check --fix .

[tool.ruff.format]
# Use the formatter; CI step already checks it with `ruff format --check .`